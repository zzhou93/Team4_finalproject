}
USS <- lapply(split(d, d$county), function(x) {
if(length(table(x$piece)) == 1)
{
st_polygon(list(cbind(x$x, x$y)))
}
else
{
st_multipolygon(list(lapply(split(x, x$piece), function(y) cbind(y$x, y$y))))
}
})
tmp  <- st_sfc(USS, crs = usmap_crs()@projargs)
tmp  <- st_sf(data.frame(database, geometry = tmp))
tmp$centroids <- st_centroid(tmp$geometry)
ggplot() + geom_sf(data = tmp) +
geom_sf(aes(fill = level, alpha = 0.4), color = "white",  data = tmp) +
geom_sf_text(aes(label = percent, geometry = centroids), colour = "black", size = 4.5, data = tmp) +
scale_fill_manual(values = colorvalues, guide = guide_none()) +
ggtitle(paste("Unemployment rate in", State.name, "in Year", yr)) +
theme_void() + theme(legend.position='none', plot.title = element_text(hjust = 0.5))
}
plot_medianhouseholdincome(d, 2019, "HI")
plot_medianhouseholdincome(d, 2019, "NJ")
#' @return a ggplot figure
#' @export
#' @examples
#' file=dataclean("https://www.ers.usda.gov/webdocs/DataFiles/48747/Unemployment.csv")
#'
#' plot_medianhouseholdincome(file, 2019, "NJ")
#' @author Lin Quan
#' @import tidyverse sf usmap
#'
#'
plot_medianhouseholdincome <- function(file, yr=2019, State.name)
{
# summarize unemployment
if(State.name %in% as.character(levels(as.factor(file$State))) & yr ==2019){
database <- file %>% filter(Attribute == "Median_Household_Income_") %>%
filter(State == State.name) %>% filter(year==yr) %>% "["(-1,) %>%
mutate(percent=round(100*Value/sum(Value), 2)) %>%
arrange(Area_name)
} else if(!State.name %in% as.character(levels(as.factor(file$State))))
{
print("Error! Not a state!")
return()
}
database <- database %>%
mutate(level = cut(percent, breaks = c(0, 2, 4, 6, 8, 100), labels = c("VeryLow", "Low", "Medium", "High", "VeryHigh")))
colorvalues <- c("VeryHigh" = "#ed4747", "High" = "#ffada2", "Medium" = "#cccccc", "Low" = "#67b5e3", "VeryLow" = "#1155b6")
# get map data
d <- us_map("counties") %>% filter(abbr == State.name)
if(!State.name %in% c("AK"))
d$county <- substr(d$county, 1, nchar(d$county) - 7)
d$group <- d$county
d <- d %>% arrange(group)
if(State.name == "AK" & yr < 2010)
{
database <- database %>% add_row(FIPS_Code = 2015, State = "AK", Area_name = "Hoonah-Angoon Census Area",
state = "AK", Attribute = database$Attribute[1], Value = NA, percent = NA) %>%
add_row(FIPS_Code = 2195, State = "AK", Area_name = "Petersburg Census Area",
state = "AK", Attribute = database$Attribute[1], Value = NA, percent = NA) %>%
arrange(Area_name)
} else if(State.name == "HI")
{
database <- database %>% add_row(FIPS_Code = 5005, State = "HI", Area_name = "Kalawao County",
state = "HI", Attribute = database$Attribute[1], Value = NA, percent = NA) %>%
arrange(Area_name)
}
USS <- lapply(split(d, d$county), function(x) {
if(length(table(x$piece)) == 1)
{
st_polygon(list(cbind(x$x, x$y)))
}
else
{
st_multipolygon(list(lapply(split(x, x$piece), function(y) cbind(y$x, y$y))))
}
})
tmp  <- st_sfc(USS, crs = usmap_crs()@projargs)
tmp  <- st_sf(data.frame(database, geometry = tmp))
tmp$centroids <- st_centroid(tmp$geometry)
ggplot() + geom_sf(data = tmp) +
geom_sf(aes(fill = level, alpha = 0.4), color = "white",  data = tmp) +
geom_sf_text(aes(label = percent, geometry = centroids), colour = "black", size = 4.5, data = tmp) +
scale_fill_manual(values = colorvalues, guide = guide_none()) +
ggtitle(paste("Unemployment rate in", State.name, "in Year", yr)) +
theme_void() + theme(legend.position='none', plot.title = element_text(hjust = 0.5))
}
plot_medianhouseholdincome(d, 2019, "NJ")
#' @return a ggplot figure
#' @export
#' @examples
#' file=dataclean("https://www.ers.usda.gov/webdocs/DataFiles/48747/Unemployment.csv")
#'
#' plotunemployed(file, 2019, "NJ")
#' @author Lin Quan
#' @import tidyverse sf usmap
#'
#'
plot_medianhouseholdincome <- function(file, yr=2019, State.name)
{
# summarize unemployment
if(State.name %in% as.character(levels(as.factor(file$State))) & yr == 2019){
database <- file %>% filter(Attribute == "Median_Household_Income_") %>%
filter(State == State.name) %>% filter(year==yr) %>% filter(!is.na(state)) %>%
mutate(percent=round(100*Value/sum(Value), 2)) %>%
arrange(Area_name)
} else if(!State.name %in% as.character(levels(as.factor(file$State))))
{
print("Error! Not a state!")
return()
}
database <- database %>%
mutate(level = cut(percent, breaks = c(0, 1, 3, 5, 8, 100), labels = c("VeryLow", "Low", "Medium", "High", "VeryHigh")))
# get map data
d <- us_map("counties") %>% filter(abbr == State.name)
d$county <- substr(d$county, 1, nchar(d$county) - 7)
d$group <- d$county
d <- d %>% arrange(group)
USS <- lapply(split(d, d$county), function(x) {
if(length(table(x$piece)) == 1)
{
st_polygon(list(cbind(x$x, x$y)))
}
else
{
st_multipolygon(list(lapply(split(x, x$piece), function(y) cbind(y$x, y$y))))
}
})
tmp  <- st_sfc(USS, crs = usmap_crs()@projargs)
tmp  <- st_sf(data.frame(database, geometry = tmp))
tmp$centroids <- st_centroid(tmp$geometry)
ggplot() + geom_sf(data = tmp) +
geom_sf(aes(fill = level, alpha = 0.4), color = "white",  data = tmp) +
geom_sf_text(aes(label = percent, geometry = centroids), colour = "black", size = 4.5, data = tmp) +
scale_fill_manual(values = c("#1155b6", "#67b5e3", "#cccccc", "#ffada2", "#ed4747"), guide = guide_none()) +
theme_void() + theme(legend.position='none') +
ggtitle(paste("Unemployment rate in", State.name, "in Year", yr))
}
plot_medianhouseholdincome(d, 2019, "NJ")
plot_medianhouseholdincome(d, 2019, "NJ")
#' @return a ggplot figure
#' @export
#' @examples
#' file=dataclean("https://www.ers.usda.gov/webdocs/DataFiles/48747/Unemployment.csv")
#'
#'
#' @author Lin Quan
#' @import tidyverse sf usmap
#'
#'
plot_medianhouseholdincome <- function(file, yr=2019, State.name)
{
# summarize unemployment
if(State.name %in% as.character(levels(as.factor(file$State))) & yr == 2019){
database <- file %>% filter(Attribute == "Median_Household_Income_") %>%
filter(State == State.name) %>% filter(year==yr) %>% filter(!is.na(state)) %>%
mutate(percent=round(100*Value/sum(Value), 2)) %>%
arrange(Area_name)
} else if(!State.name %in% as.character(levels(as.factor(file$State))))
{
print("Error! Not a state!")
return()
}
database <- database %>%
mutate(level = cut(percent, breaks = c(0, 1, 3, 5, 8, 100), labels = c("VeryLow", "Low", "Medium", "High", "VeryHigh")))
# get map data
d <- us_map("counties") %>% filter(abbr == State.name)
d$county <- substr(d$county, 1, nchar(d$county) - 7)
d$group <- d$county
d <- d %>% arrange(group)
USS <- lapply(split(d, d$county), function(x) {
if(length(table(x$piece)) == 1)
{
st_polygon(list(cbind(x$x, x$y)))
}
else
{
st_multipolygon(list(lapply(split(x, x$piece), function(y) cbind(y$x, y$y))))
}
})
tmp  <- st_sfc(USS, crs = usmap_crs()@projargs)
tmp  <- st_sf(data.frame(database, geometry = tmp))
tmp$centroids <- st_centroid(tmp$geometry)
ggplot() + geom_sf(data = tmp) +
geom_sf(aes(fill = level, alpha = 0.4), color = "white",  data = tmp) +
geom_sf_text(aes(label = percent, geometry = centroids), colour = "black", size = 4.5, data = tmp) +
scale_fill_manual(values = c("#1155b6", "#67b5e3", "#cccccc", "#ffada2", "#ed4747"), guide = guide_none()) +
theme_void() + theme(legend.position='none')
}
plot_medianhouseholdincome(d,2019,"LA")
#' @return a ggplot figure
#' @export
#' @examples
#' file=dataclean("https://www.ers.usda.gov/webdocs/DataFiles/48747/Unemployment.csv")
#'
#'
#' @author Lin Quan
#' @import tidyverse sf usmap
#'
#'
plot_medianhouseholdincome <- function(file, yr=2019, State.name)
{
# summarize unemployment
if(State.name %in% as.character(levels(as.factor(file$State))) & yr == 2019){
database <- file %>% filter(Attribute == "Unemployment_rate_") %>%
filter(State == State.name) %>% filter(year==yr) %>% "["(-1,) %>%
mutate(percent= Value) %>%
arrange(Area_name)
} else if(!State.name %in% as.character(levels(as.factor(file$State))))
{
print("Error! Not a state!")
return()
}
database <- database %>%
mutate(level = cut(percent, breaks = c(0, 2, 4, 6, 8, 100), labels = c("VeryLow", "Low", "Medium", "High", "VeryHigh")))
colorvalues <- c("VeryHigh" = "#ed4747", "High" = "#ffada2", "Medium" = "#cccccc", "Low" = "#67b5e3", "VeryLow" = "#1155b6")
# get map data
d <- us_map("counties") %>% filter(abbr == State.name)
if(!State.name %in% c("AK"))
d$county <- substr(d$county, 1, nchar(d$county) - 7)
d$group <- d$county
d <- d %>% arrange(group)
if(State.name == "AK" & yr < 2010)
{
database <- database %>% add_row(FIPS_Code = 2015, State = "AK", Area_name = "Hoonah-Angoon Census Area",
state = "AK", Attribute = database$Attribute[1], Value = NA, percent = NA) %>%
add_row(FIPS_Code = 2195, State = "AK", Area_name = "Petersburg Census Area",
state = "AK", Attribute = database$Attribute[1], Value = NA, percent = NA) %>%
arrange(Area_name)
} else if(State.name == "HI")
{
database <- database %>% add_row(FIPS_Code = 5005, State = "HI", Area_name = "Kalawao County",
state = "HI", Attribute = database$Attribute[1], Value = NA, percent = NA) %>%
arrange(Area_name)
}
USS <- lapply(split(d, d$county), function(x) {
if(length(table(x$piece)) == 1)
{
st_polygon(list(cbind(x$x, x$y)))
}
else
{
st_multipolygon(list(lapply(split(x, x$piece), function(y) cbind(y$x, y$y))))
}
})
tmp  <- st_sfc(USS, crs = usmap_crs()@projargs)
tmp  <- st_sf(data.frame(database, geometry = tmp))
tmp$centroids <- st_centroid(tmp$geometry)
ggplot() + geom_sf(data = tmp) +
geom_sf(aes(fill = level, alpha = 0.4), color = "white",  data = tmp) +
geom_sf_text(aes(label = percent, geometry = centroids), colour = "black", size = 4.5, data = tmp) +
scale_fill_manual(values = colorvalues, guide = guide_none()) +
ggtitle(paste("Unemployment rate in", State.name, "in Year", yr)) +
theme_void() + theme(legend.position='none', plot.title = element_text(hjust = 0.5))
}
plot_medianhouseholdincome(d,2019,"LA")
View(d)
d<-dataclean("https://www.ers.usda.gov/webdocs/DataFiles/48747/Unemployment.csv")
#' @return a ggplot figure
#' @export
#' @examples
#' file=dataclean("https://www.ers.usda.gov/webdocs/DataFiles/48747/Unemployment.csv")
#'
#' plot_medianhouseholdincome(file,2019,"LA")
#' @author Lin Quan
#' @import tidyverse sf usmap
#'
#'
plot_medianhouseholdincome <- function(file, yr=2019, State.name)
{
# summarize unemployment
if(State.name %in% as.character(levels(as.factor(file$State))) & yr == 2019){
database <- file %>% filter(Attribute == "Unemployment_rate_") %>%
filter(State == State.name) %>% filter(year==yr) %>% "["(-1,) %>%
mutate(percent= Value) %>%
arrange(Area_name)
} else if(!State.name %in% as.character(levels(as.factor(file$State))))
{
print("Error! Not a state!")
return()
}
database <- database %>%
mutate(level = cut(percent, breaks = c(0, 2, 4, 6, 8, 100), labels = c("VeryLow", "Low", "Medium", "High", "VeryHigh")))
colorvalues <- c("VeryHigh" = "#ed4747", "High" = "#ffada2", "Medium" = "#cccccc", "Low" = "#67b5e3", "VeryLow" = "#1155b6")
# get map data
d <- us_map("counties") %>% filter(abbr == State.name)
if(!State.name %in% c("AK"))
d$county <- substr(d$county, 1, nchar(d$county) - 7)
d$group <- d$county
d <- d %>% arrange(group)
if(State.name == "AK" & yr < 2010)
{
database <- database %>% add_row(FIPS_Code = 2015, State = "AK", Area_name = "Hoonah-Angoon Census Area",
state = "AK", Attribute = database$Attribute[1], Value = NA, percent = NA) %>%
add_row(FIPS_Code = 2195, State = "AK", Area_name = "Petersburg Census Area",
state = "AK", Attribute = database$Attribute[1], Value = NA, percent = NA) %>%
arrange(Area_name)
} else if(State.name == "HI")
{
database <- database %>% add_row(FIPS_Code = 5005, State = "HI", Area_name = "Kalawao County",
state = "HI", Attribute = database$Attribute[1], Value = NA, percent = NA) %>%
arrange(Area_name)
}
USS <- lapply(split(d, d$county), function(x) {
if(length(table(x$piece)) == 1)
{
st_polygon(list(cbind(x$x, x$y)))
}
else
{
st_multipolygon(list(lapply(split(x, x$piece), function(y) cbind(y$x, y$y))))
}
})
tmp  <- st_sfc(USS, crs = usmap_crs()@projargs)
tmp  <- st_sf(data.frame(database, geometry = tmp))
tmp$centroids <- st_centroid(tmp$geometry)
ggplot() + geom_sf(data = tmp) +
geom_sf(aes(fill = level, alpha = 0.4), color = "white",  data = tmp) +
geom_sf_text(aes(label = percent, geometry = centroids), colour = "black", size = 4.5, data = tmp) +
scale_fill_manual(values = colorvalues, guide = guide_none()) +
ggtitle(paste("Median household income in", State.name, "in 2019")) +
theme_void() + theme(legend.position='none', plot.title = element_text(hjust = 0.5))
}
plot_medianhouseholdincome(d,2019,"LA")
plot_medianhouseholdincome(d,2019,"HI")
plot_medianhouseholdincome(d,2019,"AK")
#' @return a ggplot figure
#' @export
#' @examples
#' file=dataclean("https://www.ers.usda.gov/webdocs/DataFiles/48747/Unemployment.csv")
#'
#' plot_medianhouseholdincome(file,2019,"LA")
#' @author Lin Quan
#' @import tidyverse sf usmap
#'
#'
plot_medianhouseholdincome <- function(file, yr=2019, State.name)
{
# summarize unemployment
if(State.name %in% as.character(levels(as.factor(file$State))) & yr == 2019){
database <- file %>% filter(Attribute == "Unemployment_rate_") %>%
filter(State == State.name) %>% filter(year==yr) %>% "["(-1,) %>%
mutate(percent= Value) %>%
arrange(Area_name)
} else if(!State.name %in% as.character(levels(as.factor(file$State))))
{
print("Error! Not a state!")
return()
}
database <- database %>%
mutate(level = cut(percent, breaks = c(0, 2, 4, 6, 8, 100), labels = c("VeryLow", "Low", "Medium", "High", "VeryHigh")))
colorvalues <- c("VeryHigh" = "#ed4747", "High" = "#ffada2", "Medium" = "#cccccc", "Low" = "#67b5e3", "VeryLow" = "#1155b6")
# get map data
d <- us_map("counties") %>% filter(abbr == State.name)
if(State.name == "HI")
{
database <- database %>% add_row(FIPS_Code = 5005, State = "HI", Area_name = "Kalawao County",
state = "HI", Attribute = database$Attribute[1], Value = NA, percent = NA) %>%
arrange(Area_name)
}
USS <- lapply(split(d, d$county), function(x) {
if(length(table(x$piece)) == 1)
{
st_polygon(list(cbind(x$x, x$y)))
}
else
{
st_multipolygon(list(lapply(split(x, x$piece), function(y) cbind(y$x, y$y))))
}
})
tmp  <- st_sfc(USS, crs = usmap_crs()@projargs)
tmp  <- st_sf(data.frame(database, geometry = tmp))
tmp$centroids <- st_centroid(tmp$geometry)
ggplot() + geom_sf(data = tmp) +
geom_sf(aes(fill = level, alpha = 0.4), color = "white",  data = tmp) +
geom_sf_text(aes(label = percent, geometry = centroids), colour = "black", size = 4.5, data = tmp) +
scale_fill_manual(values = colorvalues, guide = guide_none()) +
ggtitle(paste("Median household income in", State.name, "in 2019")) +
theme_void() + theme(legend.position='none', plot.title = element_text(hjust = 0.5))
}
plot_medianhouseholdincome(d,2019,"AK")
#' @return a ggplot figure
#' @export
#' @examples
#' file=dataclean("https://www.ers.usda.gov/webdocs/DataFiles/48747/Unemployment.csv")
#'
#' plot_medianhouseholdincome(file,2019,"LA")
#' @author Lin Quan
#' @import tidyverse sf usmap
#'
#'
plot_medianhouseholdincome <- function(file, yr=2019, State.name)
{
# summarize unemployment
if(State.name %in% as.character(levels(as.factor(file$State))) & yr == 2019){
database <- file %>% filter(Attribute == "Unemployment_rate_") %>%
filter(State == State.name) %>% filter(year==yr) %>% "["(-1,) %>%
mutate(percent= Value) %>%
arrange(Area_name)
} else if(!State.name %in% as.character(levels(as.factor(file$State))))
{
print("Error! Not a state!")
return()
}
database <- database %>%
mutate(level = cut(percent, breaks = c(0, 2, 4, 6, 8, 100), labels = c("VeryLow", "Low", "Medium", "High", "VeryHigh")))
colorvalues <- c("VeryHigh" = "#ed4747", "High" = "#ffada2", "Medium" = "#cccccc", "Low" = "#67b5e3", "VeryLow" = "#1155b6")
# get map data
d <- us_map("counties") %>% filter(abbr == State.name)
if(!State.name %in% c("AK"))
d$county <- substr(d$county, 1, nchar(d$county) - 7)
d$group <- d$county
d <- d %>% arrange(group)
if(State.name == "AK")
{
database <- database %>% add_row(FIPS_Code = 2015, State = "AK", Area_name = "Hoonah-Angoon Census Area",
state = "AK", Attribute = database$Attribute[1], Value = NA, percent = NA) %>%
add_row(FIPS_Code = 2195, State = "AK", Area_name = "Petersburg Census Area",
state = "AK", Attribute = database$Attribute[1], Value = NA, percent = NA) %>%
arrange(Area_name)
} else if(State.name == "HI")
{
database <- database %>% add_row(FIPS_Code = 5005, State = "HI", Area_name = "Kalawao County",
state = "HI", Attribute = database$Attribute[1], Value = NA, percent = NA) %>%
arrange(Area_name)
}
USS <- lapply(split(d, d$county), function(x) {
if(length(table(x$piece)) == 1)
{
st_polygon(list(cbind(x$x, x$y)))
}
else
{
st_multipolygon(list(lapply(split(x, x$piece), function(y) cbind(y$x, y$y))))
}
})
tmp  <- st_sfc(USS, crs = usmap_crs()@projargs)
tmp  <- st_sf(data.frame(database, geometry = tmp))
tmp$centroids <- st_centroid(tmp$geometry)
ggplot() + geom_sf(data = tmp) +
geom_sf(aes(fill = level, alpha = 0.4), color = "white",  data = tmp) +
geom_sf_text(aes(label = percent, geometry = centroids), colour = "black", size = 4.5, data = tmp) +
scale_fill_manual(values = colorvalues, guide = guide_none()) +
ggtitle(paste("Median household income in", State.name, "in 2019")) +
theme_void() + theme(legend.position='none', plot.title = element_text(hjust = 0.5))
}
plot_medianhouseholdincome(d,2019,"AK")
devtools::document()
library(finalproject)
devtools::document()
devtools::document()
library(finalproject)
library(finalproject)
devtools::document()
library(finalproject)
devtools::document()
library(finalproject)
devtools::document()
library(finalproject)
library(finalproject)
devtools::document()
devtools::document()
library(finalproject)
devtools::document()
library(finalproject)
devtools::document()
library(finalproject)
devtools::document()
library(finalproject)
devtools::document()
library(finalproject)
library(finalproject)
devtools::document()
library(finalproject)
library(finalproject)
devtools::document()
library(finalproject)
devtools::document()
library(finalproject)
devtools::document()
library(finalproject)
devtools::document()
library(finalproject)
devtools::document()
library(finalproject)
devtools::document()
library(finalproject)
devtools::document()
library(finalproject)
devtools::document()
library(finalproject)
devtools::document()
library(finalproject)
library(shiny)
runApp("shiny-examples")
## need setwd path
setwd("Team4_finalproject/inst")
library(finalproject)
## data cleaning
file=dataclean("https://www.ers.usda.gov/webdocs/DataFiles/48747/Unemployment.csv")
## data cleaning
file=dataclean("https://www.ers.usda.gov/webdocs/DataFiles/48747/Unemployment.csv")
str(file)
## The unemployment rate in county level for a specific state and a year
plotunemployed(file, 2018, "NJ")
## 2019 median household income in county level for a specific state.
plotmedianhouseholdincome(file,"NJ")
## top 10 unemployed county histogram
stateunemployed(file,2011,"IA")
## The unemployment rate along with years
plotunemployed_time(file,"IA")
